//T√≠nh ƒë·ªô d√†i m·∫£ng: length
const courses = [
  "html",
  "css",
  "javascript",
  null,
  undefined
];

var coursesLength = courses.length;
console.log("ƒê·ªô d√†i m·∫£ng:", courses.length);

/// V√≠ d·ª• 1: L·∫•y ƒë·ªô d√†i c·ªßa m·∫£ng
let fruits = ["T√°o", "Cam", "Chu·ªëi"];
console.log("V√≠ d·ª• 1 - ƒê·ªô d√†i m·∫£ng fruits:", fruits.length); // 3

// V√≠ d·ª• 2: Truy c·∫≠p ph·∫ßn t·ª≠ cu·ªëi c√πng b·∫±ng length
let numbersArray0 = [5, 10, 15, 20];
let last = numbersArray0[numbersArray0.length - 1];
console.log("V√≠ d·ª• 2 - Ph·∫ßn t·ª≠ cu·ªëi:", last); // 20

// V√≠ d·ª• 3: Th√™m ph·∫ßn t·ª≠ v√†o cu·ªëi m·∫£ng
let namesArray0 = ["An", "B√¨nh"];
namesArray0[namesArray0.length] = "Ch√¢u";
console.log("V√≠ d·ª• 3 - M·∫£ng sau khi th√™m:", namesArray0); // ["An", "B√¨nh", "Ch√¢u"]

// V√≠ d·ª• 4: R√∫t g·ªçn m·∫£ng b·∫±ng c√°ch thay ƒë·ªïi length
let items = [1, 2, 3, 4, 5];
items.length = 3;
console.log("V√≠ d·ª• 4 - M·∫£ng sau khi r√∫t g·ªçn:", items); // [1, 2, 3]

// V√≠ d·ª• 5: Ki·ªÉm tra m·∫£ng c√≥ r·ªóng kh√¥ng
let empty = [];
if (empty.length === 0) {
  console.log("V√≠ d·ª• 5 - M·∫£ng ƒëang r·ªóng");
}


//Th√™m ph√†n t·ª≠ v√†o cu·ªëi m·∫£ng: push
const players = ["Ronaldo", "Messi", "Benzema"];
var newLengthPlayers = players.push("Zidane");
console.log("newLengthPlayers: ", newLengthPlayers);
console.log("players: ", players);


// V√≠ d·ª•1: Th√™m ph·∫ßn t·ª≠ v√†o m·∫£ng s·ªë nguy√™n
let numbers = [1, 2, 3];
numbers.push(4);
console.log("M·∫£ng sau khi th√™m 4:", numbers);

// V√≠ d·ª•2: Th√™m t√™n v√†o danh s√°ch h·ªçc sinh
let students = ["An", "B√¨nh"];
students.push("Chi", "D≈©ng");
console.log("Danh s√°ch h·ªçc sinh:", students);

// V√≠ d·ª•3: S·ª≠ d·ª•ng push trong v√≤ng l·∫∑p
let squares = [];
for (let i = 1; i <= 5; i++) {
  squares.push(i * i);
}
console.log("C√°c s·ªë b√¨nh ph∆∞∆°ng:", squares);

// V√≠ d·ª•4: Push m·∫£ng con v√†o m·∫£ng l·ªõn
let matrix = [];
matrix.push([1, 2]);
matrix.push([3, 4]);
console.log("Ma tr·∫≠n:", matrix);

// V√≠ d·ª•5: Ki·ªÉm tra s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ sau khi push
let colors = ["red", "green"];
colors.push("blue");
console.log("S·ªë l∆∞·ª£ng m√†u l√†:", colors.length);

//X√≥a ph√¢n t·ª≠ cu·ªëi m·∫£ng: pop
var newCourses = courses.pop(); 
console.log("üöÄ ~ newCourses:", newCourses);

var newCourses2 = courses.pop(); 

courses.pop();
courses.pop();
courses.pop();
courses.pop();
courses.pop();
courses.pop();
courses.pop();
console.log("newCourses2:", newCourses2);
console.log("courses:", courses);

// V√≠ d·ª•1: Xo√° ph·∫ßn t·ª≠ cu·ªëi c√πng trong m·∫£ng s·ªë
let nums = [10, 20, 30];
nums.pop();
console.log("M·∫£ng sau khi xo√° ph·∫ßn t·ª≠ cu·ªëi:", nums);

// V√≠ d·ª•2: Xo√° t√™n h·ªçc sinh cu·ªëi c√πng
let classmates = ["Lan", "Mai", "H∆∞ng"];
let removedName = classmates.pop();
console.log("T√™n b·ªã xo√°:", removedName);
console.log("Danh s√°ch c√≤n l·∫°i:", classmates);

// V√≠ d·ª•3: Pop trong v√≤ng l·∫∑p
let tasks = ["Task1", "Task2", "Task3"];
while (tasks.length > 0) {
  console.log("ƒêang xo√°:", tasks.pop());
}

// V√≠ d·ª•4: Ki·ªÉm tra ph·∫ßn t·ª≠ b·ªã xo√°
let colors2 = ["blue", "yellow", "pink"];
let lastColor = colors2.pop();
console.log("M√†u b·ªã xo√°:", lastColor);
console.log("M·∫£ng sau khi xo√°:", colors2);

// V√≠ d·ª•5: Xo√° ph·∫ßn t·ª≠ cho ƒë·∫øn khi m·∫£ng r·ªóng
let stack = [1, 2, 3, 4];
while (stack.length > 0) {
  stack.pop();
}
console.log("M·∫£ng sau khi xo√° h·∫øt:", stack);


//Th√™m 1 ho·∫∑c nhi·ªÅu ph·∫ßn t·ª≠ v√†o ƒë·∫ßu m·∫£ng: unshift()
courses.unshift("mysql", "mysql2", "mysql3");
console.log("courses:", courses); 

// 5. X√≥a 1 ho·∫∑c nhi·ªÅu ph·∫ßn t·ª≠ ƒë·∫ßu m·∫£ng shift()
courses.shift();
courses.shift();
courses.shift();
// console.log("courses:", courses);

// V√≠ d·ª• 1: X√≥a ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n kh·ªèi m·∫£ng s·ªë
let numbersArray = [10, 20, 30];
let first = numbersArray.shift();
console.log("V√≠ d·ª• 1 - Ph·∫ßn t·ª≠ b·ªã x√≥a:", first);       // Output: 10
console.log("V√≠ d·ª• 1 - M·∫£ng sau khi shift:", numbersArray); // Output: [20, 30]

// V√≠ d·ª• 2: D√πng shift v·ªõi m·∫£ng chu·ªói
let fruitsArray = ["T√°o", "Chu·ªëi", "Xo√†i"];
let removed = fruitsArray.shift();
console.log("V√≠ d·ª• 2 - Ph·∫ßn t·ª≠ b·ªã x√≥a:", removed);     // Output: T√°o
console.log("V√≠ d·ª• 2 - M·∫£ng c√≤n l·∫°i:", fruitsArray);        // Output: ["Chu·ªëi", "Xo√†i"]

// V√≠ d·ª• 3: D√πng shift trong v√≤ng l·∫∑p while
let queue = ["Ng∆∞·ªùi 1", "Ng∆∞·ªùi 2", "Ng∆∞·ªùi 3"];
while (queue.length > 0) {
  let served = queue.shift();
  console.log("V√≠ d·ª• 3 - Ph·ª•c v·ª•:", served);
}
console.log("V√≠ d·ª• 3 - H√†ng ƒë·ª£i r·ªóng:", queue);         // Output: []

// V√≠ d·ª• 4: Shift tr√™n m·∫£ng r·ªóng
let emptyArr = [];
let result = emptyArr.shift();
console.log("V√≠ d·ª• 4 - Gi√° tr·ªã tr·∫£ v·ªÅ:", result);       // Output: undefined
console.log("V√≠ d·ª• 4 - M·∫£ng sau shift:", emptyArr);     // Output: []

// V√≠ d·ª• 5: K·∫øt h·ª£p shift v√† push ƒë·ªÉ x·ª≠ l√Ω h√†ng ƒë·ª£i
let tasksArray = ["Task A", "Task B"];
let currentTask = tasksArray.shift();
console.log("V√≠ d·ª• 5 - ƒêang x·ª≠ l√Ω:", currentTask);      // Output: Task A
tasksArray.push("Task C");
console.log("V√≠ d·ª• 5 - Danh s√°ch c√≤n l·∫°i:", tasksArray);     // Output: ["Task B", "Task C"]


//C·∫Øt ph·∫ßn t·ª≠ m·∫£ng theo index: silce
const courses2 = [
  "html", // 0
  "css", // 1
  "javascript", // 2
];

var newArr = courses2.slice(0, 1); 
console.log("üöÄ ~ newArr:", newArr)

// V√≠ d·ª• 1: C·∫Øt m·∫£ng s·ªë t·ª´ v·ªã tr√≠ 1 ƒë·∫øn 3 (kh√¥ng bao g·ªìm v·ªã tr√≠ 3)
let arr1 = [5, 10, 15, 20, 25];
let result1 = arr1.slice(1, 3);
console.log("V√≠ d·ª• 1 - K·∫øt qu·∫£:", result1);    // [10, 15]
console.log("V√≠ d·ª• 1 - M·∫£ng g·ªëc:", arr1);      // [5, 10, 15, 20, 25]

// V√≠ d·ª• 2: L·∫•y ph·∫ßn cu·ªëi m·∫£ng chu·ªói
let names = ["An", "B√¨nh", "Chi", "D≈©ng"];
let lastTwo = names.slice(-2);
console.log("V√≠ d·ª• 2 - Hai ph·∫ßn t·ª≠ cu·ªëi:", lastTwo); // ["Chi", "D≈©ng"]

// V√≠ d·ª• 3: C·∫Øt m·∫£ng t·ª´ ƒë·∫ßu ƒë·∫øn v·ªã tr√≠ 2 (kh√¥ng g·ªìm v·ªã tr√≠ 2)
let colorsArray = ["ƒê·ªè", "Xanh", "V√†ng", "T√≠m"];
let primary = colorsArray.slice(0, 2);
console.log("V√≠ d·ª• 3 - K·∫øt qu·∫£:", primary); // ["ƒê·ªè", "Xanh"]

// V√≠ d·ª• 4: Sao ch√©p to√†n b·ªô m·∫£ng b·∫±ng slice
let original = [1, 2, 3, 4];
let copy = original.slice();
copy.push(5);
console.log("V√≠ d·ª• 4 - B·∫£n sao:", copy);       // [1, 2, 3, 4, 5]
console.log("V√≠ d·ª• 4 - M·∫£ng g·ªëc:", original);  // [1, 2, 3, 4]

// V√≠ d·ª• 5: C·∫Øt chu·ªói k√Ω t·ª± (v√¨ string c≈©ng d√πng ƒë∆∞·ª£c slice)
let word = "Javascript";
let part = word.slice(4, 10);
console.log("V√≠ d·ª• 5 - K·∫øt qu·∫£:", part);       // "script"


//Th√™m/x√≥a ph·∫ßn t·ª≠ m·∫£ng t·∫°i v·ªã tr√≠ b·∫•t k·ª≥]
const courses4 = [
  "html", // 0
  "css", // 1
  "javascript" // 2,
];

const courses5 = [
  "html",
  "scss",
  "javascript",
];

courses4.splice(1, 1, "scss");
console.log(courses4);

// V√≠ d·ª• 1: X√≥a ph·∫ßn t·ª≠ t·∫°i v·ªã tr√≠ 2
let list1 = ["A", "B", "C", "D"];
let removed1 = list1.splice(2, 1);
console.log("V√≠ d·ª• 1 - ƒê√£ x√≥a:", removed1);    // ["C"]
console.log("V√≠ d·ª• 1 - M·∫£ng c√≤n l·∫°i:", list1); // ["A", "B", "D"]

// V√≠ d·ª• 2: Th√™m ph·∫ßn t·ª≠ m·ªõi v√†o v·ªã tr√≠ 1
let animalsArray1 = ["Ch√≥", "M√®o", "Heo"];
animalsArray1.splice(1, 0, "V·ªãt");
console.log("V√≠ d·ª• 2 - M·∫£ng sau khi th√™m:", animalsArray1); // ["Ch√≥", "V·ªãt", "M√®o", "Heo"]

// V√≠ d·ª• 3: Thay th·∫ø ph·∫ßn t·ª≠ ·ªü v·ªã tr√≠ 0
let fruitsArray1 = ["T√°o", "Chu·ªëi", "Xo√†i"];
fruitsArray1.splice(0, 1, "L√™");
console.log("V√≠ d·ª• 3 - M·∫£ng sau khi thay:", fruits); // ["L√™", "Chu·ªëi", "Xo√†i"]

// V√≠ d·ª• 4: X√≥a 2 ph·∫ßn t·ª≠ t·ª´ v·ªã tr√≠ 1 v√† ch√®n th√™m 2 ph·∫ßn t·ª≠ m·ªõi
let numsArray1 = [1, 2, 3, 4, 5];
let changed = numsArray1.splice(1, 2, 8, 9);
console.log("V√≠ d·ª• 4 - Ph·∫ßn b·ªã x√≥a:", changed); // [2, 3]
console.log("V√≠ d·ª• 4 - M·∫£ng sau thay:", nums);  // [1, 8, 9, 4, 5]

// V√≠ d·ª• 5: X√≥a t·∫•t c·∫£ ph·∫ßn t·ª≠ t·ª´ v·ªã tr√≠ 3 tr·ªü ƒëi
let letters = ["a", "b", "c", "d", "e"];
let removedAll = letters.splice(3);
console.log("V√≠ d·ª• 5 - ƒê√£ x√≥a:", removedAll);   // ["d", "e"]
console.log("V√≠ d·ª• 5 - C√≤n l·∫°i:", letters);     // ["a", "b", "c"]


//L·∫∑p c√°c ph·∫ßn t·ª≠ trong m·∫£ng: forEach
// V√≠ d·ª• 1: In t·ª´ng ph·∫ßn t·ª≠ trong m·∫£ng s·ªë
let numsArray = [10, 20, 30];
numsArray.forEach(num => console.log("V√≠ d·ª• 1 - S·ªë:", num));

// V√≠ d·ª• 2: C·ªông d·ªìn gi√° tr·ªã trong m·∫£ng
let valuesArray = [2, 4, 6];
let sum = 0;
valuesArray.forEach(val => sum += val);
console.log("V√≠ d·ª• 2 - T·ªïng:", sum); // 12

// V√≠ d·ª• 3: In ch·ªâ s·ªë v√† gi√° tr·ªã trong m·∫£ng chu·ªói
let animalsArray = ["Ch√≥", "M√®o", "V·ªãt"];
animalsArray.forEach((animal, index) => console.log(`V√≠ d·ª• 3 - ${index}: ${animal}`));

// V√≠ d·ª• 4: T·∫°o m·∫£ng m·ªõi ch·ª©a ch·ªØ in hoa
let namesArray = ["anh", "b√¨nh", "ch√¢u"];
let upperNames = [];
namesArray.forEach(name => upperNames.push(name.toUpperCase()));
console.log("V√≠ d·ª• 4 - Ch·ªØ in hoa:", upperNames); // ["ANH", "B√åNH", "CH√ÇU"]

// V√≠ d·ª• 5: Duy·ªát object b·∫±ng Object.entries v√† arrow function
let student = { name: "Minh", age: 18, grade: "A" };
Object.entries(student).forEach(([key, value]) => console.log(`V√≠ d·ª• 5 - ${key}: ${value}`));


//T√¨m ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n trong m·∫£ng th·ªèa m√£n ƒëi·ªÅu ki·ªán: find
// V√≠ d·ª• 1: T√¨m s·ªë ƒë·∫ßu ti√™n l·ªõn h∆°n 50
let numbersArray2 = [10, 25, 60, 80];
let firstBig = numbersArray2.find(num => num > 50);
console.log("V√≠ d·ª• 1 - S·ªë ƒë·∫ßu ti√™n > 50:", firstBig); // 60

// V√≠ d·ª• 2: T√¨m t√™n c√≥ ƒë·ªô d√†i l·ªõn h∆°n 4 k√Ω t·ª±
let namesArray2 = ["An", "B√¨nh", "Chi", "D≈©ng"];
let longName = namesArray2.find(name => name.length >= 4);
console.log("V√≠ d·ª• 2 - T√™n d√†i h∆°n 4 k√Ω t·ª±:", longName); // "B√¨nh"

// V√≠ d·ª• 3: T√¨m ph·∫ßn t·ª≠ ch·∫µn ƒë·∫ßu ti√™n
let values = [3, 7, 9, 12, 15];
let even = values.find(x => x % 2 === 0);
console.log("V√≠ d·ª• 3 - S·ªë ch·∫µn ƒë·∫ßu ti√™n:", even); // 12

// V√≠ d·ª• 4: T√¨m sinh vi√™n c√≥ ƒëi·ªÉm A
let studentsArray2 = [
  { name: "Lan", grade: "B" },
  { name: "H·∫£i", grade: "A" },
  { name: "Minh", grade: "C" }
];
let topStudent = studentsArray2.find(sv => sv.grade === "A");
console.log("V√≠ d·ª• 4 - Sinh vi√™n ƒëi·ªÉm A:", topStudent); // { name: "H·∫£i", grade: "A" }

// V√≠ d·ª• 5: T√¨m s·ªë √¢m ƒë·∫ßu ti√™n trong m·∫£ng
let data = [5, 3, 0, -2, -5];
let firstNegative = data.find(n => n < 0);
console.log("V√≠ d·ª• 5 - S·ªë √¢m ƒë·∫ßu ti√™n:", firstNegative); // -2


//Tr·∫£ v·ªÅ true n·∫øu c√≥ √≠t nh·∫•t 1 ph·∫ßn t·ª≠ trong m·∫£ng th·ªèa m√£n ƒëi·ªÅu ki·ªán: some
// V√≠ d·ª• 1: Ki·ªÉm tra m·∫£ng c√≥ s·ªë ch·∫µn hay kh√¥ng
let numsArray3 = [1, 3, 5, 8];
let hasEven = numsArray3.some(n => n % 2 === 0);
console.log("V√≠ d·ª• 1 - C√≥ s·ªë ch·∫µn kh√¥ng?", hasEven); // true

// V√≠ d·ª• 2: Ki·ªÉm tra c√≥ ai tr√™n 18 tu·ªïi
let ages = [12, 16, 21, 14];
let hasAdult = ages.some(age => age >= 18);
console.log("V√≠ d·ª• 2 - C√≥ ng∆∞·ªùi >= 18 tu·ªïi?", hasAdult); // true

// V√≠ d·ª• 3: Ki·ªÉm tra m·∫£ng ch·ª©a t√™n b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ H
let namesArray3 = ["An", "B√¨nh", "Huy", "Ch√¢u"];
let startsWithH = namesArray3.some(name => name.startsWith("H"));
console.log("V√≠ d·ª• 3 - C√≥ t√™n b·∫Øt ƒë·∫ßu b·∫±ng H?", startsWithH); // true

// V√≠ d·ª• 4: Ki·ªÉm tra m·∫£ng r·ªóng c√≥ ph·∫ßn t·ª≠ > 100 kh√¥ng
let emptyArray = [];
let resultArray = emptyArray.some(x => x > 100);
console.log("V√≠ d·ª• 4 - M·∫£ng r·ªóng c√≥ s·ªë > 100 kh√¥ng?", resultArray); // false

// V√≠ d·ª• 5: Ki·ªÉm tra danh s√°ch s·∫£n ph·∫©m c√≥ h√†ng t·ªìn kho
let products = [
  { name: "√Åo", stock: 0 },
  { name: "Qu·∫ßn", stock: 5 },
  { name: "Gi√†y", stock: 0 }
];
let inStock = products.some(item => item.stock > 0);
console.log("V√≠ d·ª• 5 - C√≥ s·∫£n ph·∫©m c√≤n h√†ng kh√¥ng?", inStock); // true



const students4 = [
  {
    id: 1,
    name: "Hoan Nguyen",
    age: 24,
    address: "Cau Giay, HN"
  },
  {
    id: 2,
    name: "Thuan Pham",
    age: 20,
    address: "Tien Hai, Thai Binh"
  },
  {
    id: 3,
    name: "Minh Ho√†ng",
    age: 22,
    address: "An D∆∞∆°ng, Hai Phong"
  }
];


function getElement(selector) {
  return document.querySelector(selector);
};

const listElement = getElement("ul");

function renderUI() {
  let html = "";
  let students4Length = students4.length;
  for(i = 0; i < students4Length; i++) {
    html += `
      <li>
          <p>id: ${students4[i].id}</p>
          <p>name: ${students4[i].name}</p>
          <p>age: ${students4[i].age}</p>
          <p>address: ${students4[i].address}</p>
      </li>
      <button class="btn-edit" onclick="editStudent(${students4[i].id - 1})">S·ª≠a sinh vi√™n</button>
      <button class="btn-delete" onclick="deleteStudent(${students4[i].id -1})">X√≥a sinh vi√™n</button>
    `
  }
  listElement.innerHTML = html;
}


// Khi website t·∫£i xong, hi·ªÉn th·ªã s·∫£n ph·∫©m 
document.addEventListener("DOMContentLoaded", () => {
  renderUI();
});

function deleteStudent(id) {
  students4.splice(id, 1);
  let students4Length = students4.length;
  for(i = 0; i < students4Length; i++) {
    students4[i].id = i + 1;
  }
  console.log(students4);
  renderUI();
}

function editStudent(id) {
  students4[id].age = "28";
  students4[id].name = "Tu·∫•n";
  students4[id].address = "H·∫£i Ph√≤ng";
  renderUI();
}
